#Eureka server url
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#Eureka server url with username and password(username is eureka, password is password)
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

spring.application.name=api-gateway

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

#product-service route
#What below properties are saying is when API gateway receives a request  for /api/product
#it should call the product-service. Here lb is there because API gateway also can act as a
#load balancer also.
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

#order-service route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

#discovery-server route
#Here when API gateway gets a request for /eureka/web it will then try to access
# http://ocalhost:8761/eureka/web url. But actually discovery server doesn't have any
#url as http://ocalhost:8761/eureka/web. So here we have added a filter. So with this filter
#it will change the above url as http://ocalhost:8761/. So now discovery server is
#accessible with this url. Further since we have only one instance for discovery server
# instead of lb need to add http
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#discovery-server-static-resources-route (For loading some css/javascript /images of eureka server)
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**



server.port=8080

#oAuth2 server issuer url(Keycloak server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/spring-boot-microservices-realm

#zipking
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

logging.level.org.springframework.security= DEBUG

#Actuator prometheus endpoints
management.endpoints.web.exposure.include= prometheus




